{"version":3,"sources":["assets/images/logo.png","serviceWorker.js","models/ConfigModel.js","components/Test/StepLoad.jsx","components/Test/ExpLoad.jsx","components/Test/Performance.jsx","components/Test/ConstLoad.jsx","helpers/uuid.js","helpers/consts.js","helpers/test.service.js","components/Test/TestCreate.jsx","pages/Tests/AddTest.jsx","pages/Tests/ViewTests.jsx","pages/Nodes/ViewNodes.jsx","helpers/node.service.js","components/Series/RpsChart.jsx","components/Metrics/SystemMetrics.jsx","components/Metrics/DataInfo.jsx","components/Metrics/Info.jsx","pages/Tests/DetailView.jsx","pages/Nodes/AddNode.jsx","pages/Nodes/RemoveNode.jsx","helpers/auth.service.js","pages/Login/LoginPage.jsx","pages/Auth/RegisterPage.jsx","components/Sidebar/Sidebar.jsx","components/PrivateRoute.jsx","pages/MainPage.jsx","Root.jsx","index.jsx"],"names":["module","exports","Boolean","window","location","hostname","match","ConfigModel","this","config","schedules","helpers","core","schedule","push","agent","StepLoad","getData","React","useState","start","end","step","duration","model","setModel","useEffect","Fragment","Group","compact","onChange","value","style","width","placeholder","console","log","target","addonAfter","e","fix","defaultValue","className","Option","ExpLoad","Performance","data","status","performance","ConstLoad","uuidv4","replace","c","r","Math","random","toString","API_HOST","GetHeaders","sessionStorage","getItem","GET_HEADERS","TEST_API","axios","create","baseURL","headers","NODE_API","AUTH_API","GET_LIST","GET_BY_ID","POST_CREATE","POST_REMOVE","startTest","testRecord","JSON","stringify","apiUrl","post","ID","then","response","getSeries","id","get","resp","res","getTestById","TestCreate","name","setCore","setStatus","setConfig","routes","addRoute","setAgent","getAllData","exportConfig","typeCreate","testConfig","conf","shed","routing","addCore","addSchedule","addSshAgent","notification","open","message","onClick","catch","createAndRun","labelCol","span","wrapperCol","layout","size","Item","label","accordion","Panel","header","key","margin","type","url","map","route","idx","cfg","renderChildren","host","event","user","min","port","password","keyauth","color","AddTest","onBack","title","subTitle","Column","Table","testAction","ColumnGroup","text","record","action","to","stat","Status","err","testId","ViewTests","testCollection","setCollection","remove","setRemove","length","item","dataSource","dataIndex","render","ViewNodes","RpsChart","source","Title","level","bottom","dataKey","stroke","strokeDasharray","SystemMetrics","sysMetrics","cpu","free","cached","disk","DateInfo","StartTime","EndTime","Info","rps","avRes","minRes","DetailView","useParams","test","setTest","undefined","series","setSeries","Promise","all","Series","values","time","code","respTime","Date","avr","mapExpresssion","reduce","a","b","rpSource","maxRes","tags","Uuid","i","x","y","w","h","static","minW","minH","cols","rowHeight","collapsed","src","parse","ConfigFile","root","AddNode","Host","DatabaseUrl","nodeConfig","RemoveNode","checkToken","token","getSessionToken","Login","onFinish","logo","alt","initialValues","remember","rules","required","prefix","UserOutlined","LockOutlined","htmlType","LoginPage","setToken","authData","setItem","saveToken","Token","RegisterPage","SubMenu","Menu","Sider","Layout","Header","Content","Sidebar","mode","defaultSelectedKeys","defaultOpenKeys","height","borderRight","PrivateRoute","children","rest","props","MainPage","padding","path","exact","component","Root","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.19cae7ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.cdef68cc.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/**\n *\n */\n\nexport class ConfigModel {\n\n    constructor() {\n        this.config = {\n\n            \"site-setup\": { schedules: [], helpers: {} },\n\n        }\n    }\n    addCore(core) {\n        this.config = { ...this.config, ...core, }\n    }\n\n\n    /**\n     *\n     * @param schedule\n     */\n    addSchedule(schedule) {\n        this.config['site-setup'].schedules.push(schedule)\n    }\n\n\n    /**\n     *\n     * @param agent\n     */\n    addSshAgent(agent) {\n        this.config[\"site-setup\"].helpers = { \"ssh-agent\": agent }\n    }\n\n}","import React, {useEffect} from \"react\";\nimport {Input, InputNumber, Select} from \"antd\";\n\n\nexport default function StepLoad({getData}) {\n    const [model, setModel] = React.useState({start: 0, end: 0, step: 0, duration: \"9\"})\n    React.useEffect(() => getData(model));\n    const selection = () => {\n        return (\n            <Select onChange={(e) => setModel({...model, fix: e})} defaultValue=\"s\"\n                    className=\"select-after\">\n                <Select.Option value=\"s\">с.</Select.Option>\n                <Select.Option value=\"m\">мин.</Select.Option>\n                <Select.Option value=\"h\">ч.</Select.Option>\n                <Select.Option value=\"d\">д.</Select.Option>\n            </Select>\n        )\n    }\n    return (\n\n        <React.Fragment>\n\n            <Input.Group compact>\n                <InputNumber\n                    onChange={value => {\n                        setModel({...model, start: value})\n\n                    }}\n                    style={{width: \"200px\"}}\n                    placeholder=\"Начальная нагрузка RPS\"\n                />\n                <InputNumber\n                    onChange={value => {\n                        setModel({...model, end: value})\n\n                    }}\n                    style={{width: \"200px\"}}\n                    placeholder=\"Конечная нагрузка RPS\"\n                />\n                <InputNumber\n                    onChange={value => {\n                        setModel({...model, step: value})\n\n                    }}\n                    style={{width: \"200px\"}}\n                    placeholder=\"Шаг нагрузки RPS\"\n                />\n                <Input\n                    onChange={value => {\n                        console.log(value)\n                        setModel({...model, duration: value.target.value})\n                    }}\n                    style={{width: \"200px\"}}\n                    addonAfter={selection()}\n                    defaultValue=\"1\"\n                />\n            </Input.Group>\n        </React.Fragment>\n    )\n}\n","import React from \"react\";\nimport {Input, InputNumber, Select} from \"antd\";\n\n\nexport default function ExpLoad({getData}) {\n    const [model, setModel] = React.useState({value: 0, duration: \"9\", fix: 0})\n    React.useEffect(() => getData(model));\n    const selection = () => {\n        return (\n            <Select onChange={(e) => setModel({...model, fix: e})} defaultValue=\"s\"\n                    className=\"select-after\">\n                <Select.Option value=\"s\">с.</Select.Option>\n                <Select.Option value=\"m\">мин.</Select.Option>\n                <Select.Option value=\"h\">ч.</Select.Option>\n                <Select.Option value=\"d\">д.</Select.Option>\n            </Select>\n        )\n    }\n    return (\n        <React.Fragment>\n\n            <Input.Group compact>\n                <InputNumber style={{width: \"200px\"}} placeholder=\"Значение нагрузки RPS\" onChange={value => {\n                    setModel({...model, value: value})\n                }}/>\n                <Input style={{width: \"200px\"}} addonAfter={selection()} defaultValue=\"1\" onChange={value => {\n                    setModel({...model, duration: value.target.value})\n                }}/>\n            </Input.Group>\n        </React.Fragment>\n    )\n}\n","import React from \"react\";\nimport {Checkbox} from \"antd\";\n\nexport default function Performance({getData}) {\n    const data = {\"performance\": {status: false}};\n    return (\n        <React.Fragment>\n            <Checkbox onChange={(value) => {\n                data.performance.status = value;\n                getData(data)\n            }}>Статус</Checkbox>\n        </React.Fragment>\n    )\n}\n","import React from \"react\";\nimport {Input, InputNumber, Select} from \"antd\";\n\n\nexport default function ConstLoad({getData}) {\n    const [model, setModel] = React.useState({value: 0, duration: \"9\", fix: 0})\n    React.useEffect(() => getData(model));\n    const selection = () => {\n        return (\n            <Select onChange={(e) => setModel({...model, fix: e})} defaultValue=\"s\"\n                    className=\"select-after\">\n                <Select.Option value=\"s\">с.</Select.Option>\n                <Select.Option value=\"m\">мин.</Select.Option>\n                <Select.Option value=\"h\">ч.</Select.Option>\n                <Select.Option value=\"d\">д.</Select.Option>\n            </Select>\n        )\n    }\n    return (\n        <React.Fragment>\n\n            <Input.Group compact>\n                <InputNumber\n                    style={{width: \"200px\"}}\n                    placeholder=\"Значение нагрузки RPS\"\n                    onChange={value => {\n                        setModel({...model, value: value})\n                    }}/>\n                <Input\n                    style={{width: \"200px\"}}\n                    addonAfter={selection()}\n                    defaultValue=\"1\"\n                    onChange={value => {\n                        setModel({...model, duration: value.target.value})\n\n                    }}\n                />\n            </Input.Group>\n        </React.Fragment>\n    )\n}\n","export default function uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}","import axios from 'axios';\n\nconst API_HOST = \"http://localhost:7700/api\";\n\nfunction GetHeaders() {\n    return {\n        'Access-Control-Allow-Origin': '*',\n        \"Content-Type\": \"application/json\",\n        \"Token\": sessionStorage.getItem('token')\n    }\n}\n\nexport default {\n    API_HOST,\n    GET_HEADERS: GetHeaders,\n    TEST_API: axios.create({baseURL: `${API_HOST}/test/`, headers: GetHeaders()}),\n    NODE_API: axios.create({baseURL: `${API_HOST}/node/`, headers: GetHeaders()}),\n    AUTH_API: axios.create({baseURL: `${API_HOST}/user/`, headers: GetHeaders()}),\n\n    GET_LIST: '/list',\n    GET_BY_ID: '/get/',\n    POST_CREATE: '/create',\n    POST_REMOVE: '/remove/',\n\n}","import apiUrl from './consts';\nimport axios from 'axios';\n\n/**\n * Создание теста\n * @param testConfig конфигурация тестирования\n */\nexport function createTest(testConfig) {\n    console.log(testConfig);\n    return apiUrl.TEST_API\n        .post(apiUrl.POST_CREATE, testConfig)\n        .then(response => response.data)\n\n}\n\nexport function createAndRun(testConfig) {\n    return apiUrl.TEST_API\n        .post(apiUrl.POST_CREATE, testConfig)\n        .then(response => response.data)\n        .then((model) => startTest(model))\n}\n\n\nexport function startTest(testRecord) {\n    console.log(JSON.stringify(testRecord));\n\n    return apiUrl.TEST_API\n        .post(`/run/${testRecord.ID}`)\n        .then(response => response.data)\n\n}\nexport function stopTest(testRecord) {\n    console.log(JSON.stringify(testRecord));\n\n    return apiUrl.TEST_API\n        .post(`/stop/${testRecord.ID}`)\n        .then(response => response.data)\n\n}\n\nexport function removeTest(testId) {\n\n    return apiUrl.TEST_API\n        .post(apiUrl.POST_REMOVE + testId)\n        .then(response => response.data)\n}\n\nexport function getListTest() {\n    return apiUrl.TEST_API\n        .get(apiUrl.GET_LIST)\n        .then(resp => {\n\n            console.log(resp);\n            return resp.data;\n        })\n        .then(res => {\n            if (res && res !== 'Token is expired' && res.length > 0) {\n                return res.map(item => ({...item, key: item.ID}));\n            }\n        })\n}\n\n/**\n * @return {string}\n */\nexport function QueryString(target, host, start, end) {\n    return `/series/?table=gun-metrics&target=${target}&start=2020-04-11T10:50:52.9462237Z&end=2020-04-11T10:51:32.6597553Z`\n}\n\n/**\n *\n * @type {{\n * Target:string,\n * Host:string,\n * StartTime:Date,\n * EndTime:Date,\n * }}\n */\n// eslint-disable-next-line no-unused-vars\nconst TestModel = {};\n\n/**\n *\n * @param {TestModel} testModel\n */\nexport function getSeries(id) {\n    return apiUrl.TEST_API\n        .get('/series/' + id)\n        .then(resp => {\n            console.log(resp.data);\n            return resp;\n        }).then(res => res.data)\n}\n\n/**\n *\n * @param {string} id\n */\nexport function getTestById(id) {\n    return apiUrl.TEST_API\n        .get(apiUrl.GET_BY_ID + id)\n        .then(resp => {\n            console.log(resp.data);\n            return resp;\n        }).then(res => res.data)\n}","import React, {useEffect} from 'react';\nimport {Button, Card, Collapse, Form, Input, InputNumber, Select} from \"antd\";\nimport {ConfigModel} from \"../../models/ConfigModel\";\nimport StepLoad from \"./StepLoad\";\nimport ExpLoad from \"./ExpLoad\";\nimport Performance from \"./Performance\";\nimport ConstLoad from \"./ConstLoad\";\nimport uuidv4 from \"../../helpers/uuid\";\nimport {createAndRun, createTest} from \"../../helpers/test.service\";\nimport {notification} from 'antd';\n\nexport default function TestCreate() {\n    const [core, setCore] = React.useState({name: '', \"server-host\": \"\"})\n\n    const [status, setStatus] = React.useState(\"step-load\");\n    /**\n     * Algorithm of configuration\n     */\n    const [config, setConfig] = React.useState({});\n    /**\n     * Testing Routes\n     */\n    const [routes, addRoute] = React.useState([]);\n\n    const [agent, setAgent] = React.useState({});\n\n    useEffect(() => console.log(agent), [agent]);\n\n    /**\n     * Get all data\n     * @param config\n     */\n    const getAllData = (config) =>\n        setConfig(config);\n\n    /**\n     * Export configuration\n     * @param e Event\n     */\n    const exportConfig = (typeCreate) => {\n        const conf = new ConfigModel();\n        const shed = {routing: [...routes]};\n        config.duration = config.duration + config.fix\n        shed[status] = config;\n\n        conf.addCore(core);\n        conf.addSchedule(shed);\n\n        conf.addSshAgent(agent);\n        if (typeCreate) {\n            createTest(conf.config).then(() => {\n                notification.open({\n                    message: 'Тест создан успешно',\n                    onClick: () => {\n\n                    },\n                });\n            }).catch(() => {\n                notification.open({\n                    message: 'Ошибка создания теста',\n                    onClick: () => {\n\n                    },\n                });\n            })\n        } else {\n            createAndRun(conf.config).then(() => {\n                notification.open({\n                    message: 'Тест запущен успешно',\n                    onClick: () => {\n\n                    },\n                });\n            }).catch(() => {\n                notification.open({\n                    message: 'Ошибка запуска теста',\n                    onClick: () => {\n\n                    },\n                });\n            })\n        }\n\n    };\n\n    useEffect(() => console.log(config), [config]);\n    /**\n     * Render Children Algorithms\n     * @param cfg\n     * @returns {*}\n     */\n    const renderChildren = () => {\n        switch (status) {\n            case \"step-load\":\n                return <StepLoad cfg={config} getData={getAllData}/>;\n            case \"exp-load\":\n                return <ExpLoad cfg={config} getData={getAllData}/>;\n            case \"performance\":\n                return <Performance cfg={config} getData={getAllData}/>;\n            default:\n                return <ConstLoad cfg={config} getData={getAllData}/>;\n        }\n    };\n    return (\n\n\n        <Form\n            labelCol={{\n                span: 4,\n            }}\n            wrapperCol={{\n                span: 14,\n            }}\n            layout=\"horizontal\"\n\n\n            size=\"middle\"\n        >\n\n            <Form.Item label=\"Наименование теста\">\n                <Input onChange={value => setCore({...core, name: value.target.value})}/>\n            </Form.Item>\n            <Form.Item label=\"Тестируемый Сервер\">\n                <Input onChange={value => setCore({...core, \"server-host\": value.target.value})}\n                       placeholder=\"http://localhost:3030/\"/>\n            </Form.Item>\n            <Form.Item label=\"Пути тестирования\">\n\n                <Collapse accordion>\n                    <Collapse.Panel header=\"Пути тестирования\" key=\"1\">\n                        <Button style={{margin: \"20px\"}} type=\"primary\"\n                                onClick={e => addRoute([...routes, {\n                                    url: \"\",\n                                    \"requestType\": \"GET\",\n                                    \"statusCode\": 200\n                                }])}>\n                            Добавить путь\n                        </Button>\n\n                        {routes && routes.map((route, idx) =>\n                            <Form.Item key={uuidv4()} label={idx + 1}>\n                                <Input\n\n                                    placeholder=\"http://localhost:3030/\"\n                                    defaultValue={route.url}\n                                    onChange={e => {\n                                        route.url = e.target.value\n                                    }}/>\n                            </Form.Item>\n                        )}\n\n                    </Collapse.Panel>\n\n                </Collapse>\n            </Form.Item>\n\n\n            <Form.Item label=\"Алгоритм тестирования\">\n                <Select defaultValue=\"step-load\" onChange={value => setStatus(value)}>\n                    <Select.Option value=\"step-load\">Линейная нагрузка</Select.Option>\n                    <Select.Option value=\"const-load\">Константная</Select.Option>\n                    <Select.Option value=\"exp-load\">Экспоненциальная нагрузка</Select.Option>\n                    <Select.Option value=\"performance\">Максимальная нагрузка</Select.Option>\n\n                </Select>\n            </Form.Item>\n            <Form.Item label=\"Конфигурация алгоритма\">\n                {renderChildren()}\n            </Form.Item>\n            <Form.Item label=\"Агенты тестирования\">\n                <Collapse accordion>\n                    <Collapse.Panel header=\"Агенты тестирования\" key=\"1\">\n                        <Form\n                            labelCol={{\n                                span: 4,\n                            }}\n                            wrapperCol={{\n                                span: 14,\n                            }}\n                            layout=\"horizontal\"\n\n\n                            size=\"middle\"\n                        >\n                            <Form.Item label=\"Хост\">\n                                <Input value={agent.host} onChange={event => {\n                                    setAgent({...agent, host: event.target.value})\n                                }}/>\n                            </Form.Item>\n                            <Form.Item label=\"Пользователь\">\n                                <Input value={agent.user} onChange={event => {\n                                    setAgent({...agent, user: event.target.value})\n                                }}/>\n                            </Form.Item>\n                            <Form.Item label=\"Порт\">\n                                <InputNumber min={1} onChange={value => {\n                                    setAgent({...agent, port: value})\n                                }}/>\n                            </Form.Item>\n                            <Form.Item label=\"Пароль\">\n                                <Input onChange={event => {\n                                    setAgent({...agent, password: event.target.value})\n                                }}/>\n                            </Form.Item>\n                            <Form.Item label=\"Публичный ключ\">\n                                <Input onChange={event => {\n                                    setAgent({...agent, keyauth: event.target.value})\n                                }}/>\n                            </Form.Item>\n                        </Form>\n                    </Collapse.Panel>\n                </Collapse>\n            </Form.Item>\n            <Form.Item className=\"action-buttons\">\n                <Button color=\"primary\" onClick={() => exportConfig(false)}>Сохранить и запустить</Button>\n                <Button onClick={() => exportConfig(true)}>Сохранить</Button>\n            </Form.Item>\n        </Form>\n\n    )\n}","import React from 'react';\nimport {\n    PageHeader,\n} from 'antd';\nimport TestCreate from \"../../components/Test/TestCreate\";\n\nexport default function AddTest() {\n\n    return (\n        <React.Fragment>\n            <PageHeader\n                className=\"site-page-header\"\n                onBack={() => null}\n                title=\"Создание нагрузочного теста\"\n                subTitle=\"Создание теста\"\n            />\n            <TestCreate/>\n\n        </React.Fragment>\n    )\n\n}\n","import React from 'react';\nimport {Button, PageHeader, Table, Tag} from 'antd';\nimport {Link} from \"react-router-dom\";\nimport {getListTest, removeTest, startTest, stopTest} from \"../../helpers/test.service\";\nimport {notification} from 'antd';\n\nconst {Column, ColumnGroup} = Table;\n\n\nconst testAction = (text, record, action) => {\n    return (\n        <React.Fragment>\n            <Link to={`/test/detail/${record.ID}`}>Выбрать</Link>\n            &nbsp;&nbsp;  &nbsp;&nbsp;\n            <Button onClick={() => {\n                const stat = (record.Status === 'active' ? 'Остановлен' : 'Запущен');\n                if (record.Status !== 'active') {\n                    startTest(record).then(() => notification.open({\n                        message: `Тест ${stat}  успешно`,\n\n                    })).catch(err => notification.open({\n                        message: `Тест не успешно ${stat} ` + +err.message,\n\n                    }));\n                    action(true)\n                } else {\n                    stopTest(record).then(() => notification.open({\n                        message: `Тест ${stat}  успешно`,\n\n                    })).catch(err => notification.open({\n                        message: `Тест не успешно ${stat} ` + +err.message,\n\n                    }));\n                    action(true)\n                }\n\n            }}>{record.Status === 'active' ? 'Остановить' : 'Запустить'}</Button>\n            &nbsp;&nbsp;  &nbsp;&nbsp;\n            <Link onClick={() => {\n                removeTest(record.ID).then(() => notification.open({\n                    message: 'Тест удален успешно',\n                    onClick: () => {\n                    },\n                }));\n                action(true)\n            }} to={`/test/list`}>Удалить</Link>\n        </React.Fragment>\n    )\n};\n\nexport default function ViewTests() {\n    const [testCollection, setCollection] = React.useState([]);\n    const [remove, setRemove] = React.useState(false);\n    React.useEffect(() => {\n        getListTest().then(data => {\n            setCollection(data);\n            setRemove(false);\n        })\n    }, [remove]);\n\n    return (\n        <React.Fragment>\n            <PageHeader\n                className=\"site-page-header\"\n                onBack={() => null}\n                title=\"История тестирования\"\n            />\n            <Table dataSource={testCollection} className=\"shadow-flex\">\n                <Column title=\"# Теста\" dataIndex=\"ID\" key=\"ID\"/>\n                <Column title=\"Наименование\" dataIndex=\"Name\" key=\"Name\"/>\n                <Column title=\"Таргет сервер\" dataIndex=\"Target\" key=\"Target\"/>\n                <Column title=\"Алгоритм\" dataIndex=\"Algorithm\" key=\"Algorithm\"/>\n                <Column title=\"Статус теста\" dataIndex=\"Status\" key=\"Status\"/>\n                <Column\n                    title=\"Действия\"\n                    key=\"action\"\n                    render={(text, record) => testAction(text, record, setRemove)}\n                />\n            </Table>\n        </React.Fragment>\n    )\n}","import React from 'react';\nimport { notification, PageHeader, Table, Tag } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport { getListTest, removeTest } from \"../../helpers/test.service\";\nimport { getListNode, removeNode } from \"../../helpers/node.service\";\nimport uuidv4 from \"../../helpers/uuid\";\n\nconst { Column, ColumnGroup } = Table;\n\nconst testAction = (text, record, action) => (\n    <React.Fragment>\n        <Link to={`/node/remove/${record.id}`}>Выбрать</Link>\n        &nbsp;&nbsp; &nbsp;&nbsp;\n        <Link onClick={() => {\n            removeNode(record.ID).then(() => notification.open({\n                message: 'Узел удален успешно',\n                onClick: () => {\n                },\n            }));\n            action(true)\n        }} to={`/node/list`}>Удалить</Link>\n    </React.Fragment>\n);\n\nexport default function ViewNodes() {\n    const [testCollection, setCollection] = React.useState([]);\n    const [remove, setRemove] = React.useState(false);\n\n    React.useEffect(() => {\n        getListNode().then(data => setCollection(data.map(item => ({ key: uuidv4(), ...item }))));\n        setRemove(false);\n    }, [remove]);\n    return (\n        <React.Fragment>\n            <PageHeader\n                className=\"site-page-header\"\n                onBack={() => null}\n                title=\"Узлы системы\"\n            />\n            <Table dataSource={testCollection} className=\"shadow-flex\">\n                <Column title=\"# Ноды\" dataIndex=\"Uuid\" key=\"Uuid\" />\n                <Column title=\"Имя ноды\" dataIndex=\"Name\" key=\"Name\" />\n                <Column title=\"URL Базы данных\" dataIndex=\"DatabaseUrl\" key=\"DatabaseUrl\" />\n                <Column\n                    title=\"Действия\"\n                    key=\"action\"\n                    render={(text, record) => testAction(text, record, setRemove)}\n                />\n            </Table>\n        </React.Fragment>\n    )\n}","import apiUrl from './consts';\n\n\nexport function createNode(nodeConfig) {\n    console.log(nodeConfig);\n    return apiUrl.NODE_API\n        .post(apiUrl.POST_CREATE, nodeConfig)\n        .then(response => response => response.data)\n\n}\n\nexport function removeNode(id) {\n    return apiUrl.NODE_API\n        .post(apiUrl.POST_REMOVE + id)\n        .then(response => response.data)\n}\n\nexport function getListNode() {\n    return apiUrl.NODE_API\n        .post(apiUrl.GET_LIST)\n        .then(response => response.data)\n}\n\nexport function getNodeById(id) {\n    return apiUrl.NODE_API\n        .get(apiUrl.GET_BY_ID + id)\n        .then(response => response.data)\n}","import React, { useEffect } from 'react';\n\nimport { AreaChart, Area, CartesianGrid, YAxis, XAxis, Tooltip, Brush, ResponsiveContainer } from 'recharts';\nimport { Typography } from \"antd\";\n\nexport default function RpsChart({ source }) {\n    console.log(source);\n\n    return (\n        <div className=\"charts-flex\">\n            <Typography.Title level={3}>График количества запросов в секунду</Typography.Title>\n            <ResponsiveContainer>\n                <AreaChart data={source} margin={{\n                    bottom: 50,\n                }}>\n                    <XAxis dataKey=\"time\" />\n                    <YAxis />\n                    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n                    <Area type=\"monotone\" dataKey=\"rps\" stroke=\"#8884d8\" />\n                    <Tooltip />\n                    <Brush />\n                </AreaChart>\n            </ResponsiveContainer>\n        </div>\n\n    )\n}\n","import React, { useEffect } from 'react';\n\nimport { Typography } from \"antd\";\n\nexport default function SystemMetrics({ sysMetrics }) {\n\n    return (\n        <div className=\"info-flex\">\n            <Typography.Title level={3}>Системные метрики</Typography.Title>\n            <p><span className=\"info-span\">CpuLoad {sysMetrics.cpu}</span></p>\n            <p><span className=\"info-span\">MemoryFree {sysMetrics.free}</span></p>\n            <p><span className=\"info-span\">MemoryCached {sysMetrics.cached}</span></p>\n            <p><span className=\"info-span\">DiskLoad I/O interface {sysMetrics.disk}</span></p>\n        </div>\n\n    )\n}\n","import React, {useEffect} from 'react';\n\nimport {Tag, Typography} from \"antd\";\n\nexport default function DateInfo({source}) {\n\n    return (\n        <div className=\"info-flex\">\n            <Typography.Title level={3}>Результаты тестирования</Typography.Title>\n\n            <div className=\"sub-flex\">\n                <span className=\"info-span\">Результат тестирования</span>{source.Status}\n            </div>\n\n            <div className=\"sub-flex\">\n                <span className=\"info-span\">Время начала</span> {source.StartTime}\n            </div>\n            <div className=\"sub-flex\">\n                <span className=\"info-span\">Время остановки</span> {source.EndTime}\n            </div>\n        </div>\n\n    )\n}\n","import React, {useEffect} from 'react';\n\nimport {Typography} from \"antd\";\n\nexport default function Info({source}) {\n\n    return (\n        <div className=\"info-flex\">\n            <Typography.Title level={3}>Показатели тестирования</Typography.Title>\n            <p><span className=\"info-span\">Количество запросов в секунду</span> {source.rps}</p>\n            <p><span className=\"info-span\">Среднее время ответа</span> {source.avRes}</p>\n            <p><span className=\"info-span\">Максимальное время ответа</span> {source.minRes}</p>\n            <p><span className=\"info-span\">Минимальное время ответа</span> {source.minRes}</p>\n        </div>\n\n    )\n}\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getSeries, getTestById } from \"../../helpers/test.service\";\nimport GridLayout from 'react-grid-layout';\nimport RpsChart from \"../../components/Series/RpsChart\";\nimport SystemMetrics from \"../../components/Metrics/SystemMetrics\";\nimport DateInfo from \"../../components/Metrics/DataInfo\";\nimport Info from \"../../components/Metrics/Info\";\nimport { PageHeader, Typography, Tag } from \"antd\";\nimport ReactJson from \"react-json-view\";\n\nexport default function DetailView() {\n    let { id } = useParams();\n    const [test, setTest] = React.useState();\n    const [series, setSeries] = React.useState(undefined);\n    console.log('current id ' + id);\n    const mapValues = (someArr) => someArr.values.map(item => ({\n        time: item[0],\n        code: item[1],\n        respTime: new Date(item[2]),\n        rps: item[3]\n    }));\n    React.useEffect(() => {\n        console.log('update state');\n        Promise.all([\n            getTestById(id)\n                .then(item => {\n                    setTest(item);\n\n                }),\n            getSeries(id)\n                .then(item => {\n                    if (item !== undefined && item.length > 0 && item[0].Series !== null)\n\n                        setSeries(mapValues(item[0].Series[0]))\n                }),\n        ])\n\n\n    }, []);\n\n    const layout = [\n        { i: 'a', x: 0, y: 0, w: 6, h: 10, static: true, minW: 6, minH: 10 },\n        { i: 'b', x: 0, y: 1, w: 2, h: 7, minW: 2, minH: 7 },\n        { i: 'c', x: 0, y: 2, w: 2, h: 7, minW: 2, minH: 7 },\n        { i: 'd', x: 3, y: 0, w: 2, h: 7, minW: 2, minH: 7 },\n        { i: 'f', x: 3, y: 1, w: 2, h: 20, minW: 2, minH: 4 },\n    ];\n    const avr = (data, mapExpresssion) => {\n        if (data) {\n            const sum = data.map(mapExpresssion).reduce((a, b) => a + b, 0);\n            return (sum / data.length) || 0;\n        }\n        else {\n            return 0;\n        }\n    }\n    const rpSource = { rps: avr(series, (item) => item.rps), avRes: avr(series, (item) => item.respTime), maxRes: '100ms', minRes: '0ms' };\n    return (\n        <React.Fragment>\n            {test && <PageHeader\n                className=\"site-page-header\"\n                onBack={() => null}\n                tags={<><Tag color=\"blue\">{test.Uuid} </Tag> <Tag color=\"green\">{test.Status} </Tag></>}\n                title={`Детализация  тестирования `}\n            />}\n            <GridLayout className=\"layout\" layout={layout} cols={12} rowHeight={30} width={1700}>\n\n                <div key=\"a\" className=\"info-flex\">\n                    {series !== undefined && <RpsChart source={series} />}\n                </div>\n                <div key=\"b\" className=\"info-flex\">\n                    {series !== undefined && <SystemMetrics source={series} />}\n                </div>\n                <div key=\"c\" className=\"info-flex\">\n                    {test !== undefined && <DateInfo source={test} />}\n                </div>\n                <div key=\"d\" className=\"info-flex\">\n                    {series !== undefined && <Info source={rpSource} />}\n                </div>\n                <div key=\"f\" className=\"info-flex\">\n                    <Typography.Title level={3}>Конфигурация теста</Typography.Title>\n                    {test !== undefined &&\n                        <ReactJson collapsed={true}\n                            src={JSON.parse(test.ConfigFile !== undefined ? test.ConfigFile : { root: '' })} />}\n                </div>\n\n            </GridLayout>\n\n        </React.Fragment>\n    )\n}","import React from 'react';\nimport {Button, notification, Form, PageHeader, Input} from \"antd\";\nimport {createNode} from \"../../helpers/node.service\";\nimport uuidv4 from \"../../helpers/uuid\";\n\n\nexport default function AddNode() {\n    const model = {Uuid: uuidv4(), Host: '', DatabaseUrl: ''};\n    const sendForm = () => {\n        createNode(model).then(() => {\n            notification.open({\n                message: 'Узел создан успешно',\n                onClick: () => {\n\n                },\n            });\n        })\n    };\n    return (\n        <React.Fragment>\n            <PageHeader\n                className=\"site-page-header\"\n                onBack={() => null}\n                title=\"Добавление узла\"\n                subTitle=\"Добавление узла\"\n            />\n            <div>\n                <Form\n                    labelCol={{\n                        span: 4,\n                    }}\n                    wrapperCol={{\n                        span: 14,\n                    }}\n                    layout=\"horizontal\"\n\n\n                    size=\"middle\"\n                >\n                    <Form.Item label=\"Наименование  узла\">\n                        <Input onChange={value => model.name = value.target.value}/>\n                    </Form.Item>\n                    <Form.Item label=\"URL  узла\">\n                        <Input onChange={value => model.Host = value.target.value}/>\n                    </Form.Item>\n                    <Form.Item label=\"URL  базы данных\">\n                        <Input onChange={value => model.DatabaseUrl = value.target.value}/>\n                    </Form.Item>\n                    <Form.Item>\n                        <Button color=\"primary\" onClick={sendForm}>Сохранить </Button>\n\n                        <Button>Отменить</Button>\n                    </Form.Item>\n                </Form>\n            </div>\n        </React.Fragment>\n    )\n}","import React from 'react';\n\n\n\nexport default function  RemoveNode() {\n    return (\n        <React.Fragment>\n\n        </React.Fragment>\n    )\n}","import apiUrl from './consts';\n\n\nexport function register({ authData }) {\n\n    return apiUrl.AUTH_API\n        .post('/register', authData)\n        .then(response => response => response.data)\n\n}\n\nexport function login({ authData }) {\n    return apiUrl.AUTH_API\n        .post('/login', authData)\n        .then(response => response.data)\n}\nexport function get_token(authData) {\n    console.log(authData)\n    return apiUrl.AUTH_API\n        .post('/auth', authData)\n        .then(response => response.data)\n}\n\nexport function saveToken(token) {\n    console.log(token);\n    sessionStorage.setItem('token', token);\n    console.log(sessionStorage.getItem('token'))\n}\n\nexport function getSessionToken() {\n    const token = sessionStorage.getItem('token');\n    if (token !== null && token !== undefined && token.length > 0 && token !== \"\") {\n        return token\n    }\n    return undefined\n\n}\nexport function checkToken() {\n    if (getSessionToken() !== undefined) {\n        return true\n    }\n    return false;\n}","import React from 'react'\nimport {Form, Input, Button, Checkbox, Card, Typography} from 'antd';\nimport {UserOutlined, LockOutlined} from '@ant-design/icons';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    Redirect,\n} from \"react-router-dom\";\nimport logo from '../../assets/images/logo.png'\nimport {get_token, saveToken, checkToken} from '../../helpers/auth.service';\n\nconst Login = ({onFinish}) => (\n    <div className=\"login-page\">\n        <Card className=\"card-form\">\n            <Typography.Title>Вход в систему </Typography.Title>\n            <img src={logo} alt=\"\"/>\n            <Form\n                name=\"normal_login\"\n                className=\"login-form\"\n                initialValues={{remember: true}}\n                onFinish={onFinish}\n\n            >\n                <Form.Item\n                    name=\"Username\"\n                    rules={[{required: true, message: 'Введите имя пользователя'}]}\n                >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>} placeholder=\"Username\"/>\n                </Form.Item>\n                <Form.Item\n                    name=\"Password\"\n                    rules={[{required: true, message: 'Введите пароль пользователя'}]}\n                >\n                    <Input\n                        prefix={<LockOutlined className=\"site-form-item-icon\"/>}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                    />\n                </Form.Item>\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">Войти</Button>\n                </Form.Item>\n            </Form>\n        </Card>\n    </div>);\n\n\nfunction LoginPage() {\n    const [token, setToken] = React.useState(checkToken())\n    const onFinish = values => {\n        console.log(values);\n        get_token(values)\n            .then(({Token}) => {\n                saveToken(Token)\n                setToken(checkToken())\n            })\n    };\n    React.useEffect(() => {\n        console.log('token changed')\n    }, [token])\n    return (\n        <React.Fragment>\n            {token === false ? <Login onFinish={onFinish}/> : <Redirect to=\"/\"/>}\n        </React.Fragment>\n\n    )\n}\n\nexport default LoginPage\n","import React from 'react'\n\nfunction RegisterPage() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n\nexport default RegisterPage\n","import React from 'react'\nimport SubnodeOutlined from \"@ant-design/icons/lib/icons/SubnodeOutlined\";\nimport UngroupOutlined from \"@ant-design/icons/lib/icons/UngroupOutlined\";\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\nfunction Sidebar() {\n    return (\n        <>\n            <Sider width={200} className=\"site-layout-background\">\n                <Menu\n                    mode=\"inline\"\n                    defaultSelectedKeys={['1']}\n                    defaultOpenKeys={['sub1']}\n                    style={{ height: '100%', borderRight: 0 }}\n                >\n                    <SubMenu\n                        key=\"sub1\"\n                        title={\n                            <span>\n                                <SubnodeOutlined />\n                               Тестирование\n                              </span>\n                        }\n                    >\n                        <Menu.Item key=\"5\"><Link to=\"/test/add\">Новый тест</Link></Menu.Item>\n                        <Menu.Item key=\"2\"><Link to=\"/test/list\">История </Link></Menu.Item>\n                    </SubMenu>\n                    <SubMenu\n                        key=\"sub2\"\n                        title={\n                            <span>\n                                <UngroupOutlined />\n                               Узлы системы\n                              </span>\n                        }\n                    >\n                        <Menu.Item key=\"7\"><Link to=\"/node/add\">Добавить узел</Link></Menu.Item>\n                        <Menu.Item key=\"10\"><Link to=\"/node/list\">Узлы</Link></Menu.Item>\n                        <Menu.Item key=\"12\"><Link to=\"/settings\">Настройки</Link></Menu.Item>\n                        <Menu.Item key=\"13\"><Link to=\"/credentails\">Credentials</Link></Menu.Item>\n                    </SubMenu>\n                </Menu>\n            </Sider>\n        </>\n    )\n}\n\nexport default Sidebar\n","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    Redirect,\n} from \"react-router-dom\";\nimport {checkToken} from \"../helpers/auth.service\";\n\nfunction PrivateRoute({children, ...rest},) {\n    return (\n        <Route {...rest} render={(props) => (<React.Fragment>\n                {checkToken() ? children : < Redirect to='/login'/>}\n\n            </React.Fragment>\n\n\n        )}/>\n    )\n}\n\nexport default PrivateRoute\n","import {Layout, Menu, Breadcrumb, Typography} from 'antd';\nimport {UserOutlined, LaptopOutlined, NotificationOutlined} from '@ant-design/icons';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n} from \"react-router-dom\";\nimport React from 'react';\nimport AddTest from \"./Tests/AddTest\";\nimport ViewTests from \"./Tests/ViewTests\";\nimport ViewNodes from \"./Nodes/ViewNodes\";\nimport DetailView from \"./Tests/DetailView\";\nimport AddNode from \"./Nodes/AddNode\";\nimport RemoveNode from \"./Nodes/RemoveNode\";\nimport SubnodeOutlined from \"@ant-design/icons/lib/icons/SubnodeOutlined\";\nimport UngroupOutlined from \"@ant-design/icons/lib/icons/UngroupOutlined\";\nimport LoginPage from './Login/LoginPage';\nimport RegisterPage from './Auth/RegisterPage';\nimport Sidebar from '../components/Sidebar/Sidebar';\nimport PrivateRoute from '../components/PrivateRoute';\nimport logo from '../assets/images/logo.png'\nimport {checkToken} from \"../helpers/auth.service\";\n\nconst {SubMenu} = Menu;\nconst {Header, Content, Sider} = Layout;\n\nexport default function MainPage() {\n    return (<Layout className=\"layflex\">\n        <Router>\n            <Header className=\"header\">\n                <img src={logo} alt=\"\"/>\n                <div className=\"logo\">\n                    QuarkLT\n                </div>\n            </Header>\n            <Layout>\n                {checkToken()===true && <Sidebar/>}\n\n                <Layout style={{padding: '0 24px 24px'}}>\n                    <Switch>\n                        <Route path=\"/users\">\n                            <h2>users</h2>\n                        </Route>\n                        <Route path=\"/test/add\">\n                            <AddTest/>\n                        </Route>\n                        <Route path=\"/login\">\n                            <LoginPage/>\n                        </Route>\n                        <Route path=\"/register\">\n                            <RegisterPage/>\n                        </Route>\n\n                        <PrivateRoute exact path=\"/\">\n                            <div>fLEX</div>\n                        </PrivateRoute>\n                        <PrivateRoute path=\"/test/list\">\n                            <ViewTests/>\n                        </PrivateRoute>\n                        <PrivateRoute path=\"/test/detail/:id\">\n                            <DetailView/>\n                        </PrivateRoute>\n                        <PrivateRoute path=\"/node/list\">\n                            <ViewNodes/>\n                        </PrivateRoute>\n                        <PrivateRoute path=\"/node/add\">\n                            <AddNode/>\n                        </PrivateRoute>\n                        <PrivateRoute path=\"/node/remove/:id\">\n                            <RemoveNode/>\n                        </PrivateRoute>\n                        <Route component={() => <Typography.Title>Страница не найдена 404</Typography.Title>}/>\n\n                    </Switch>\n                </Layout>\n            </Layout>\n        </Router>\n    </Layout>)\n}","import React from 'react'\nimport MainPage from './pages/MainPage'\nimport {checkToken} from './helpers/auth.service'\n\nfunction Root() {\n\n    return (\n        <>\n            <MainPage/>\n        </>\n    )\n}\n\nexport default Root\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.dark.css\";\nimport \"./index.css\";\nimport 'react-grid-layout/css/styles.css'\nimport 'react-resizable/css/styles.css'\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport Root from './Root';\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();"],"sourceRoot":""}